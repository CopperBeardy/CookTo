@page "/add-recipe"

@inject IMediator Mediator

<PageTitle>Add Recipe - CookTo</PageTitle>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Add Recipe</li>
    </ol>
</nav>

@if (_submitSuccessful)
{
    <div class="alert alert-success" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
        </svg>
        Your Recipe has been submitted successfully!
    </div>
}
else if (_errorMessage is not null)
{
    <div class="alert alert-danger" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z" />
        </svg>
        @_errorMessage
    </div>
}

<h3 class="mt-5 mb-4">Add a Recipe</h3>


<EditForm OnValidSubmit="SubmitForm" EditContext="_editContext">
    <FluentValidationValidator />
    <FormSection Title="Details"
                 HelpText="This information is for giving a breif overview of the recipe">
        <FormFieldSet Width="col-6">
            <label for="recipeTitle" class="font-weight-bold text-secondary">Title</label>
            <InputText @bind-Value="_recipe.Title" class="form-control" id="recipeTitle" />
            <ValidationMessage For="@(() => _recipe.Title)" />
        </FormFieldSet>
        <FormFieldSet Width="col-6">
            <label for="category" class="font-weight-bold text-secondary">Category</label>
            <InputSelect TValue="Category" @bind-Value="_recipe.Category" class="form-control" id="category">
                @foreach (var category in Enum.GetValues(typeof(Category)))
                {
                    <option value="@category">@category</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => _recipe.Category)" />
        </FormFieldSet>
        <FormFieldSet>
            <label for="recipeDescription" class="font-weight-bold text-secondary">Description</label>
            <InputTextArea @bind-Value="_recipe.Description" rows="6" class="form-control" id="recipeDescription" />
            <ValidationMessage For="@(() => _recipe.Description)" />
        </FormFieldSet>
        @*Add image upload*@
        <FormFieldSet Width="col-3">
            <label for="preparationTime" class="font-weight-bold text-secondary">Preperation Time</label>
            <InputNumber min=0 @bind-Value="_recipe.PreparationTime" class="form-control" id="preparationTime" />
            <ValidationMessage For="@(() => _recipe.PreparationTime)" />
        </FormFieldSet>
        <FormFieldSet Width="col-3">
            <label for="cookingTime" class="font-weight-bold text-secondary">Cooking Time</label>
            <InputNumber min=0 @bind-Value="_recipe.CookingTime" class="form-control" id="cookingTime" />
            <ValidationMessage For="@(() => _recipe.CookingTime)" />
        </FormFieldSet>
        <FormFieldSet Width="col-3">
            <label for="serves" class="font-weight-bold text-secondary">Serves</label>
            <InputNumber min=0 @bind-Value="_recipe.Serves" class="form-control" id="serves" />
            <ValidationMessage For="@(() => _recipe.Serves)" />
        </FormFieldSet>
    </FormSection>

    <FormSection Title="Recipe parts"
                 HelpText="Define the various parts of the recipe and there ingredients">
        <FormFieldSet>
            @foreach (var part in _recipe.RecipeParts)
            {
                <div class="card card-brand mb-4 shadow">
                    <div class="card-body">
                        <div class="col mb-1">
                            <div class="form-group">
                                <label for="partTitle" class="font-weight-bold text-secondary me-1">Part Title</label>
                                <InputText @bind-Value="part.PartTitle" class="form-control" id="partTitle" />
                                <ValidationMessage For="@(() => part.PartTitle)" />

                            </div>
                        </div>
                        <div class="card card-brand mb-4 shadow">

                            @foreach (var ingred in part.Items)
                            {
                                <div class="card-body">
                                    <div class="d-flex flex-row align-content-center">
                                        <div class="d-flex flex-row">
                                            <div class="col-sm-2 me-1">
                                                <label for="quantityInput" class="font-weight-bold text-secondary me-1">Quantity</label>
                                                <InputNumber min=0 id="quantityInput" class="form-control " @bind-Value="ingred.Amount" />
                                            </div>

                                            <div class="col-sm-2 me-1">
                                                <label for="measureUnitSelect" class="font-weight-bold text-secondary me-1">Unit</label>
                                                <InputSelect id="measureUnitSelect" class="form-control "
                                                     @bind-Value="ingred.Unit">
                                                    @foreach (var unit in Enum.GetValues(typeof(MeasureUnit)))
                                                    {
                                                <option value="@unit">@unit</option>
                                                    }
                                        </InputSelect>
                                    </div>

                                    <div class="col-sm-2 me-1">
                                        <label for="ingredientSelect" class="font-weight-bold text-secondary me-1">Ingredient</label>
                                        <InputSelect id="ingredientSelect" class="form-control "
                                                     @bind-Value="ingred.IngredientName">
                                            @foreach (var ing in Ingredients)
                                                    {
                                                <option value="@ing.Name">@ing.Name</option>
                                                    }
                                        </InputSelect>
                                    </div>

                                    <div class="col-4">
                                        <label for="descriptionInput" class="font-weight-bold text-secondary me-1">Description</label>
                                        <InputText id="decsriptionInput" class="form-control " placeholder="additional information"
                                                   @bind-Value="ingred.AdditionalInformation" />
                                    </div>
                                </div>
                                <div class="col-1 d-flex mt-3">
                                    <button @onclick="@(() => part.Items.Remove(ingred))" class="btn btn-link" type="button">
                                        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-x-circle-fill text-danger" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                            <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z" />
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        </div>
                            }

                        </div>
                        <div class="row">
                            <div class="col">
                                <button class="btn btn-outline-primary" type="button" @onclick="@(() => part.Items.Add(new PartIngredient()))">Add Part Ingredient </button>
                                <ValidationMessage For="@(() => part.Items)" />
                            </div>
                        </div>
                    </div>
                    <button @onclick="@(() => _recipe.RecipeParts.Remove(part))" class="btn btn-link" type="button">
                             <RemoveSvg/>
                    </button>
                </div>
            }
            <div class="row">
                <div class="col">
                    <button class="btn btn-outline-primary" type="button" @onclick="@(() => _recipe.RecipeParts.Add(new RecipePart()))">Add RecipePart</button>
                    <ValidationMessage For="@(() => _recipe.RecipeParts)" />
                </div>
            </div>
        </FormFieldSet>
    </FormSection>

    <FormSection Title="Equipment, Utensils and Accessories"
                 HelpText="Let people know what equipment they will need to make this recipe">
        <FormFieldSet>

                @foreach (var utensil in _recipe.Utensils)
                {                    
                        <div class="d-flex flex-row align-content-center mb-1">
                             <div class="col-2 me-1">
                                    <label for="utenRequiredAmount" class="font-weight-bold text-secondary me-1">Amount</label>
                                    <InputNumber id="utenSelect" min=1 class="form-control " 
                                             @bind-Value="utensil.RequiredAmount" /> 
                                      <ValidationMessage For="@(() => utensil.RequiredAmount)"/>
                             </div>
                            <div class="col-5 me-1">
                                    <label for="utenSelect" class="font-weight-bold text-secondary me-1">Item </label>
                                    <InputSelect id="utenSelect" class="form-control " 
                                             @bind-Value="utensil.UtensilName" >                                             
                                        @foreach (var _utensil in Utensils)
                                        {
                                        <option value="@_utensil.UtensilName">@_utensil.UtensilName</option>
                                        }
                                </InputSelect>
                                   <ValidationMessage For="@(() => utensil.UtensilName)"/>
                               
                             </div>
                        <div class="col-1 d-flex mt-3">
                            <button @onclick="@(() => _recipe.Utensils.Remove(utensil))" class="btn btn-link" type="button">                                
                                <RemoveSvg/>
                            </button>
                        </div>
                    </div>
            
                }
                    <div class="row">
                                <div class="col">
                                    <button class="btn btn-outline-primary" type="button" @onclick="@(() => _recipe.Utensils.Add(new UtensilResultDto()))">Add  </button>
                                    <ValidationMessage For="@(() => _recipe.Utensils)" />
                                </div>
                            </div>
         
        </FormFieldSet>
    </FormSection>

    <FormSection Title="Cooking steps"
                 HelpText="Tell the steps that need to be taken to make this this recipe">
        <FormFieldSet>
            @{
                var i = 0;
            }
            @foreach (var cookingStep in _recipe.CookingSteps)
            {
                i++;
                cookingStep.OrderNumber = i;
                <div class="row">
                    <div class="col-2">
                        <div class="form-group">
                            <label class="font-weight-bold text-secondary">Order</label>
                            <p>@cookingStep.OrderNumber</p>
                        </div>
                    </div>
                    <div class="col">
                        <div class="form-group">
                            <label for="cookingStepDescription" class="font-weight-bold text-secondary">Description</label>
                            <InputText @bind-Value="cookingStep.StepDescription" class="form-control" id="cookingStepDescription" />
                            <ValidationMessage For="@(() => cookingStep.StepDescription)" />
                        </div>
                    </div>
                    <div class="col-1 d-flex mt-3">
                        <button @onclick="@(() => _recipe.CookingSteps.Remove(cookingStep))" class="btn btn-link" type="button">
                                <RemoveSvg/>
                        </button>
                    </div>
                </div>
            }

            <div class="row">
                <div class="col">
                    <button class="btn btn-outline-primary" type="button" @onclick="@(() => _recipe.CookingSteps.Add(new CookingStep()))">Add CookingStep</button>
                    <ValidationMessage For="@(() => _recipe.CookingSteps)" />
                </div>
            </div>
        </FormFieldSet>
    </FormSection>

    <FormSection Title="Tips"
                 HelpText="Create tips for making various parts of the recipe">
        <FormFieldSet></FormFieldSet>
    </FormSection>

    <div class="mt-4 mb-5">
        <div class="row">
            <div class="offset-4 col-8 text-right">
                <button class="btn btn-outline-secondary" type="button" @onclick="@(() => _recipe = new AddRecipeDto())">Reset</button>
                <button class="btn btn-primary" type="submit">Submit</button>
            </div>
        </div>
    </div>
</EditForm>


@code {

    private AddRecipeDto _recipe = new AddRecipeDto();
    public IEnumerable<IngredientResultDto>? Ingredients { get; set; } = new List<IngredientResultDto>() { };
    public IEnumerable<UtensilResultDto>? Utensils { get; set; } = new List<UtensilResultDto>();
    public string newIngredient { get; set; } = "";
    private bool _submitSuccessful;
    private string? _errorMessage;
    private EditContext _editContext = default!;

    protected override void OnInitialized()
    {
        Utensils = new List<UtensilResultDto>()
        {
            new UtensilResultDto(){ Id="12321", UtensilName="Whisk"},
            new UtensilResultDto(){ Id="45645", UtensilName="23cm flutted tart tin"}
        };
        Ingredients = new List<IngredientResultDto>()
        {
        new IngredientResultDto() { Id="34534501" , Name="White bread flour"},
        new IngredientResultDto() { Id="34534501" , Name="Caster Sugar"},
        };

        _editContext = new EditContext(_recipe);
        _editContext.SetFieldCssClassProvider(new BootstrapCssClassProvider());
    }

    private async Task SubmitForm()
    {

        //todo : get current user name
        var response = await Mediator.Send(new AddRecipeRequest(_recipe));
        if (response.recipe == null)
        {
            _errorMessage = "There was a problem saving your Recipe.";
            _submitSuccessful = false;
            return;
        }
        _recipe = new AddRecipeDto();
        _errorMessage = null;
        _submitSuccessful = true;
    }
}

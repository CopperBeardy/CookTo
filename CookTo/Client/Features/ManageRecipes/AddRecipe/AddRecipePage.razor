@page "/add-recipe"

@inject IMediator Mediator

<PageTitle>Add Recipe - CookTo</PageTitle>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Add Recipe</li>
    </ol>
</nav>

@if (_submitSuccessful)
{
     <h3 class="mt-5 mb-4">Add Recipe</h3>
    <SuccessAlert Message="Your trail has been added successfully!" />
}
else if (_errorMessage is not null)
{
    <ErrorAlert Message="@_errorMessage" />
}

<RecipeForm @ref="_recipeForm" OnSubmit="SubmitNewRecipe" />

@code {
    private bool _submitSuccessful;
    private string? _errorMessage; 
    private RecipeForm _recipeForm;

    private async Task SubmitNewRecipe(RecipeDto recipe,IBrowserFile image)
    {       
        var response = await Mediator.Send(new AddRecipeRequest(recipe));
        if (response.recipe == null)
        {
            _errorMessage = "There was a problem saving your Recipe.";
            _submitSuccessful = false;
            StateHasChanged();
            return;
        }

        if(image is null)
        {
            _submitSuccessful = true;            
           _recipeForm.ResetForm();
            StateHasChanged();
            return;
        }

       _submitSuccessful= await ProcessImage(response.recipe.Id,image);
               
       if (_submitSuccessful)
        {
            _recipeForm.ResetForm();
        }

        StateHasChanged();
   
   
   }

    private async Task<bool> ProcessImage(string recipeId,IBrowserFile image)
    {
        var imageUploadResponse = await Mediator.Send(new UploadRecipeImageRequest(recipeId, image));
        if (string.IsNullOrWhiteSpace(imageUploadResponse.ImageName))
        {
            _errorMessage = "Your recipe was saved but there was a problem uploading the image";
            return false;
        }
        return true;
    }
 }

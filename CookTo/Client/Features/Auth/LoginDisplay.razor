@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <div class="d-flex justify-content-end align-items-center">
         <span class="text-light"> @context.User.Identity?.Name!</span>
         <NavLink class="nav-link" @onclick="BeginLogout">
            <span aria-hidden="true" >Log Out</span>
        </NavLink>  
       </div>
    </Authorized>
    <NotAuthorized>
        <div class="nav-item" >
        <NavLink class="nav-link" aria-label="logIn"  href="authentication/login">
            <span style="color: white" aria-hidden="true" >Log in</span>
        </NavLink> 
        </div>
    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginLogout(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}

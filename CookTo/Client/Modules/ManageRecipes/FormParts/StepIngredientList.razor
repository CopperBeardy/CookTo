@inject             IngredientManager IngredientManager
<div class="row gy-1 gx-1 align-items-center mb-2">
    @foreach (var ing in CookingStep.StepIngredients)
    {
        <div class="mb-2 ">    
            <div class="row mb-sm-1 ">                
                <FormInputGroup Id="quantityInput" Label="Quantity" Width="col col-sm-2">
                    <InputText aria-required="true" id="quantityInput" class="form-control  " @bind-Value="ing.Quantity" />
                    <ValidationMessage aria-alert="true" For="@(() =>  ing.Quantity)" />
                </FormInputGroup>
                <FormInputGroup Id="measureInput" Label="Measure" Width="col col-sm-2">
                    <InputText aria-required="true" id="measureInput" class="form-control  " @bind-Value="ing.Measure" />
                    <ValidationMessage aria-alert="true" For="@(() =>  ing.Measure)" />
                </FormInputGroup>
            <FormInputGroup Id="ingredientSelect" Label="Ingredient" Width="col col-sm-8">
                   <InputSelect aria-required="true" id="ingredientSelect" @bind-Value="ing.Ingredient">
                        <option>select ingredient</option>
                         @foreach (var item in ShoppingList)
                         {
                             <option>@item.Ingredient.Text</option>
                         }
                   </InputSelect>
                </FormInputGroup>
        <button role="button" aria-label="removeIngredient" @onclick="(() => CookingStep.StepIngredients.Remove(ing))" class="btn link-danger col-auto ml-3" type="button"><i class="bi bi-dash-circle"></i></button>
       </div>
    </div>   
    }
</div>

@code {
    [Parameter] public CookingStep CookingStep { get; set; } = new CookingStep();
    [Parameter] public List<ShoppingItem> ShoppingList { get; set; } = new List<ShoppingItem>();
}

@inject NavigationManager NavManager

<div class="card shadow" style="width: 18rem;">
    <img  width="190" height="150" src="@(!string.IsNullOrWhiteSpace(RecipeSummary.ImageFileName) ? $"images/{RecipeSummary.ImageFileName}" : "https://via.placeholder.com/286x190.jpg?text=No+Image+For+Trail")" class="card-img-top ">
    <div class="card-body">
 
        <h6 class="card-title">@RecipeSummary.RecipeTitle</h6>      
        <h6 class="card-subtitle mb-3 text-muted"><span class="bi bi-grid mr-2"></span>  @RecipeSummary.Category</h6>
   
     
            <span><span class="bi bi-person-circle mr-2"></span> @RecipeSummary.Author</span>
                
       
         <div class="d-flex flex-row-reverse gap-1">
        <button class="btn btn-primary" title="View" @onclick="@(async () => NavManager.NavigateTo($"/recipe/{RecipeSummary.RecipeId}"))">
            <i class="bi bi-file-earmark-text"></i>
        </button>
       @* <FavoriteButton RecipeId="@RecipeSummary.RecipeId"  />*@
        <AuthorizeView>
            @if (RecipeSummary.Author.Equals(context.User?.Identity?.Name, StringComparison.CurrentCultureIgnoreCase) || context.User.IsInRole("Administrator"))
            {
                <button class="btn btn-outline-secondary float-right" title="Edit" @onclick="@(() => NavManager.NavigateTo($"/edit-recipe/{RecipeSummary.RecipeId}"))">
                    <i class="bi bi-pencil"></i>
                </button>
            }
        </AuthorizeView>
        </div>
    </div>
</div>

@code {
    [Parameter, EditorRequired] public RecipeSummaryDto RecipeSummary { get; set; } = null!;
    [Parameter, EditorRequired] public EventCallback<RecipeSummaryDto> OnSelected { get; set; }

}